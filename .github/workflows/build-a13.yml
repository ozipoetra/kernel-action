name: Build Kernel A13+

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout kernel source
      run: |
        git clone --depth=1 https://ozipoetra120@dev.azure.com/ozipoetra120/kernel/_git/android_kernel_xiaomi_mt6768 -b kernel-tree ${{ github.workspace }}
  
    - name: Checkout clang compiler
      run: |
        cd ${{ github.workspace }}
        # git -c protocol.version=2 clone https://gitlab.com/LeCmnGend/proton-clang.git --no-tags --no-recurse-submodules --depth=1 -b clang-r510928 toolchains/proton-clang
        mkdir -p toolchains/proton-clang
        cd toolchains/proton-clang
        wget -q -i <(curl -Ls https://raw.githubusercontent.com/ZyCromerZ/Clang/main/Clang-main-link.txt)
        tar -xzf Clang*
        rm Clang*
  
    - name: KernelSU Patch
      run: |
        cd ${{ github.workspace }}
        curl -LSs "https://raw.githubusercontent.com/rifsxd/KernelSU-Next/next/kernel/setup.sh" | bash -s next-susfs-4.14
        git clone https://gitlab.com/simonpunk/susfs4ksu.git -b kernel-4.14
        cp ./susfs4ksu/kernel_patches/include/linux/susfs.h ${{ github.workspace }}/include/linux/
        cp ./susfs4ksu/kernel_patches/fs/susfs.c ${{ github.workspace }}/fs/
        cp ./susfs4ksu/kernel_patches/50_add_susfs_in_kernel-4.14.patch ${{ github.workspace }}
        patch -p1 < 50_add_susfs_in_kernel-4.14.patch || echo "Patch failed, skipping."
        sed -i '/struct ratelimit_state ratelimit;/a\#if defined(CONFIG_KSU_SUSFS) && !defined(ANDROID_KABI_RESERVE)\nu64 android_kabi_reserved2;\n#endif\nANDROID_KABI_RESERVE(1);\nANDROID_KABI_RESERVE(2);' ${{ github.workspace }}/include/linux/sched/user.h
        rm -rf susfs4ksu
        echo "CONFIG_KSU=y" >> ${{ github.workspace }}/arch/arm64/configs/merlin_defconfig
        echo "CONFIG_KSU_SUSFS=y" >> ${{ github.workspace }}/arch/arm64/configs/merlin_defconfig
        echo "CONFIG_KSU_SUSFS_SUS_SU=y" >> ${{ github.workspace }}/arch/arm64/configs/merlin_defconfig

    - name: Checkout zipper
      uses: actions/checkout@v4
      with:
        repository: osm0sis/AnyKernel3
        path: ${{ github.workspace }}/AnyKernel3

    - name: Android kernel build
      run: |
        cd ${{ github.workspace }}
        export PATH="$PWD/toolchains/proton-clang/bin:$PATH"
        export ARCH=arm64
        export SUBARCH=arm64
        export CROSS_COMPILE=aarch64-linux-gnu-
        export CROSS_COMPILE_COMPAT=arm-linux-gnueabi-
        export CROSS_COMPILE_ARM32=arm-linux-gnueabi-
        export CC=clang
        export LD=ld.lld
        export AR=llvm-ar
        export NM=llvm-nm
        export OBJCOPY=llvm-objcopy
        export OBJDUMP=llvm-objdump
        export STRIP=llvm-strip
        export KBUILD_COMPILER_STRING="$(clang --version | head -n 1 | perl -pe 's/\(http.*?\)//gs' | sed -e 's/  */ /g' -e 's/[[:space:]]*$//')"
        export KBUILD_BUILD_HOST=Animex.biz.id
        export KBUILD_BUILD_USER=mitsuaaðŸ˜˜
        make -j$(nproc --all) O=out ARCH=arm64 CC=clang CROSS_COMPILE=aarch64-linux-gnu- CROSS_COMPILE_ARM32=arm-linux-gnueabi- CROSS_COMPILE_COMPAT=arm-linux-gnueabi- LD=ld.lld AR=llvm-ar NM=llvm-nm OBJCOPY=llvm-objcopy OBJDUMP=llvm-objdump STRIP=llvm-strip merlin_defconfig
        make -j$(nproc --all) O=out ARCH=arm64 savedefconfig CC=clang CROSS_COMPILE=aarch64-linux-gnu- CROSS_COMPILE_ARM32=arm-linux-gnueabi- CROSS_COMPILE_COMPAT=arm-linux-gnueabi- LD=ld.lld AR=llvm-ar NM=llvm-nm OBJCOPY=llvm-objcopy OBJDUMP=llvm-objdump STRIP=llvm-strip
        cp -f out/defconfig arch/arm64/configs/merlin_defconfig
        make -j$(nproc --all) O=out ARCH=arm64 CC=clang CROSS_COMPILE=aarch64-linux-gnu- CROSS_COMPILE_ARM32=arm-linux-gnueabi- CROSS_COMPILE_COMPAT=arm-linux-gnueabi- LD=ld.lld AR=llvm-ar NM=llvm-nm OBJCOPY=llvm-objcopy OBJDUMP=llvm-objdump STRIP=llvm-strip

    - name: Make AnyKernel3
      run: |
        cd ${{ github.workspace }}
        sed -i 's/do.devicecheck=1/do.devicecheck=0/g' AnyKernel3/anykernel.sh
        sed -i 's!BLOCK=/dev/block/platform/omap/omap_hsmmc.0/by-name/boot;!BLOCK=auto;!g' AnyKernel3/anykernel.sh
        sed -i 's/IS_SLOT_DEVICE=0;/IS_SLOT_DEVICE=auto;/g' AnyKernel3/anykernel.sh
        sed -i "s/kernel.string=ExampleKernel by osm0sis @ xda-developers/kernel.string=KucingPoi Kernel by mitsuaa/g" AnyKernel3/anykernel.sh
        cp out/arch/arm64/boot/Image.gz-dtb AnyKernel3/
        cp out/arch/arm64/boot/dtbo.img AnyKernel3/
        cp out/arch/arm64/boot/dts/mediatek/mt6768.dtb AnyKernel3/dtb
        cd AnyKernel3
        zip [AOSP-A13+]KucingPoi-$(date "+%Y-%m-%d--%H-%M-%S").zip * -r
        
    - name: Release build
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.CHANNEL_ID }}
        token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        message: Kernel Built with latest ZyCromerZ-clang with KernelSU!.
        document: ${{ github.workspace }}/AnyKernel3/*.zip
