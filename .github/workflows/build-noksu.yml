name: Build Kernel-NoKSU

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout kernel source
      uses: actions/checkout@v4
      with:
        repository: mitsu00/android_kernel_xiaomi_mt6768
        ref: miui
        token: ${{ secrets.MITSU_TOKEN }}
        path: ${{ github.workspace }}
  
    - name: Checkout clang compiler
      run: |
        cd ${{ github.workspace }}
        git -c protocol.version=2 clone https://gitlab.com/LeCmnGend/proton-clang.git --no-tags --no-recurse-submodules --depth=1 -b clang-r510928 toolchains/proton-clang
  
    - name: No KernelSU
      run: |
        cd ${{ github.workspace }}
        sed -i 's/CONFIG_KSU=y/CONFIG_KSU=n/g' arch/arm64/configs/merlin_defconfig

    - name: Checkout zipper
      uses: actions/checkout@v4
      with:
        repository: osm0sis/AnyKernel3
        path: ${{ github.workspace }}/AnyKernel3

    - name: ccache
      uses: hendrikmuhs/ccache-action@v1.2
      with:
        create-symlink: true

    - name: Android kernel build
      run: |
        cd ${{ github.workspace }}
        export PATH="$PWD/toolchains/proton-clang/bin:$PATH"
        export ARCH=arm64
        export SUBARCH=arm64
        export CROSS_COMPILE=aarch64-linux-gnu-
        export CROSS_COMPILE_COMPAT=arm-linux-gnueabi-
        export CROSS_COMPILE_ARM32=arm-linux-gnueabi-
        export CC=clang
        export LLVM=1
        export LLVM_IAS=1
        export LD=ld.lld
        export AR=llvm-ar
        export NM=llvm-nm
        export OBJCOPY=llvm-objcopy
        export OBJDUMP=llvm-objdump
        export STRIP=llvm-strip
        export KBUILD_COMPILER_STRING="$(clang --version | head -n 1 | perl -pe 's/\(http.*?\)//gs' | sed -e 's/  */ /g' -e 's/[[:space:]]*$//')"
        export KBUILD_BUILD_HOST=Animex.biz.id
        export KBUILD_BUILD_USER=mitsuaaðŸ˜˜
        make -j$(nproc --all) O=out ARCH=arm64 CC=clang CROSS_COMPILE=aarch64-linux-gnu- CROSS_COMPILE_ARM32=arm-linux-gnueabi- CROSS_COMPILE_COMPAT=arm-linux-gnueabi- LD=ld.lld AR=llvm-ar NM=llvm-nm OBJCOPY=llvm-objcopy OBJDUMP=llvm-objdump STRIP=llvm-strip merlin_defconfig
        make -j$(nproc --all) O=out ARCH=arm64 savedefconfig CC=clang CROSS_COMPILE=aarch64-linux-gnu- CROSS_COMPILE_ARM32=arm-linux-gnueabi- CROSS_COMPILE_COMPAT=arm-linux-gnueabi- LD=ld.lld AR=llvm-ar NM=llvm-nm OBJCOPY=llvm-objcopy OBJDUMP=llvm-objdump STRIP=llvm-strip
        cp -f out/defconfig arch/arm64/configs/merlin_defconfig
        make -j$(nproc --all) O=out ARCH=arm64 CC=clang CROSS_COMPILE=aarch64-linux-gnu- CROSS_COMPILE_ARM32=arm-linux-gnueabi- CROSS_COMPILE_COMPAT=arm-linux-gnueabi- LD=ld.lld AR=llvm-ar NM=llvm-nm OBJCOPY=llvm-objcopy OBJDUMP=llvm-objdump STRIP=llvm-strip

    - name: Make AnyKernel3
      run: |
        cd ${{ github.workspace }}
        sed -i 's/do.devicecheck=1/do.devicecheck=0/g' AnyKernel3/anykernel.sh
        sed -i 's!block=/dev/block/platform/omap/omap_hsmmc.0/by-name/boot;!block=auto;!g' AnyKernel3/anykernel.sh
        sed -i 's/is_slot_device=0;/is_slot_device=auto;/g' AnyKernel3/anykernel.sh
        sed -i "s/kernel.string=ExampleKernel by osm0sis @ xda-developers/kernel.string=[MIUI-12.5] KucingPoi Kernel by mitsuaa/g" AnyKernel3/anykernel.sh
        cp out/arch/arm64/boot/Image.gz-dtb AnyKernel3/
        cp out/arch/arm64/boot/dtbo.img AnyKernel3/
        cp out/arch/arm64/boot/dts/mediatek/mt6768.dtb AnyKernel3/dtb
        cd AnyKernel3
        zip [MIUI-12.5]KucingPoi-$(date "+%Y-%m-%d--%H:%M:%S").zip * -r
        
    - name: Release build
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.CHANNEL_ID }}
        token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        message: Kernel Built with clang-r510928 without KernelSU!.
        document: ${{ github.workspace }}/AnyKernel3/*.zip
